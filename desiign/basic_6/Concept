六大原则:
1 单一职责 SRP Single Responsibility Principle
原:类更改的原因不能超过一个
    一个类只干一件事
    属性和行为分离
    职责划分

2 里氏置换 LSP Liskov Substitution Principle
原:所有能够使用基类的地方必须能够透明地使用其子类
    1 子类必须完全实现父类的方法
    2 子类可以有自己的个性
    3 覆盖或实现父类方法时输入参数可以被放大
    4 覆盖或实现父类方法时输出结果可以被缩小

3 依赖倒置 DIP Dependence Inversion Principle
    1 高层模块不因该依赖底层模块，两者都应该依赖其抽象
    2 抽象不应该依赖细节(抽象:接口/抽象类 细节:实现类)
    3 细节应该依赖抽象
  面向接口编程

4 接口隔离
原:不依赖不需要的接口；依赖建立在最小的接口上
    保证接口的纯洁性:
        接口尽量小
        接口高内聚(public尽量少)
        定制服务
    接口该干的事都干，不该干的一个不干

5 最少知识(迪米特) LKP Least Knowledge Principle
原:一个类只需要耦合自己相关的，其他的不用

6 开闭原则 OCP Open Close Principle
原:对扩展开放，对修改关闭